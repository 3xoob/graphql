{"version":3,"file":"UserRank.js","sourceRoot":"","sources":["../../src/app/UserRank.ts"],"names":[],"mappings":"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","sourcesContent":["import { Result, Rank, IRankInfo } from \"../types\";\nimport { GraphQLService } from \"./dataFetching\";\n\n// Rank data with level ranges\nconst ranks: Rank[] = [\n    { minLevel: 0, maxLevel: 9, title: \"Aspiring developer\" },\n    { minLevel: 10, maxLevel: 19, title: \"Beginner developer\" },\n    { minLevel: 20, maxLevel: 29, title: \"Apprentice developer\" },\n    { minLevel: 30, maxLevel: 39, title: \"Assistant developer\" },\n    { minLevel: 40, maxLevel: 49, title: \"Basic developer\" },\n    { minLevel: 50, maxLevel: 54, title: \"Junior developer\" },\n    { minLevel: 55, maxLevel: 59, title: \"Confirmed developer\" },\n    { minLevel: 60, maxLevel: 60, title: \"Full-Stack developer\" },\n];\n\n// Function to get current rank and next rank based on the user's level\nfunction getRankInfo(level: number): Result<IRankInfo> {\n    let currentRank = ranks[0]!;\n    let nextRank: Rank | null = null;\n\n    for (let i = 0; i < ranks.length; i++) {\n        const rank = ranks[i];\n        if (rank && (level >= rank.minLevel && level <= rank.maxLevel)) {\n            currentRank = rank;\n            const nextRankto = ranks[i + 1];\n            if (nextRankto) {\n                nextRank = nextRankto\n                break;\n            }\n        }\n    }\n    return [{ currentRank, nextRank }, null]\n}\n\n// Function to render and display rank card\nexport async function displayRankCard() {\n    const graphQLService = new GraphQLService();\n    const [topTransaction, Terror] = await graphQLService.getTopTransaction();\n    if (Terror !== null) {\n        console.error(Terror);\n    }\n    let level: number | null = 0\n    if (topTransaction && topTransaction.amount) {\n        level = topTransaction.amount;\n    }\n    const [rankInfo, err] = getRankInfo(level);\n    if (err) {\n        console.error(err);\n        return\n    }\n    const app = document.getElementById(\"topDiv\");\n    if (!app) {\n        console.error(\"Profile container not found!\");\n        return;\n    }\n\n    const cardContainer = document.createElement(\"div\");\n    cardContainer.classList.add(\"rank-card\");\n\n    const currentRankEl = document.createElement(\"div\");\n    currentRankEl.classList.add(\"current-rank\");\n    currentRankEl.textContent = rankInfo.currentRank.title;\n    cardContainer.appendChild(currentRankEl);\n\n    const nextRankEl = document.createElement(\"div\");\n    nextRankEl.classList.add(\"next-rank\");\n    nextRankEl.textContent = rankInfo.nextRank\n        ? `Next rank in ${rankInfo.nextRank.minLevel - level} levels`\n        : \"You have reached the highest rank!\";\n    cardContainer.appendChild(nextRankEl);\n\n    const levelContainer = document.createElement(\"div\");\n    levelContainer.classList.add(\"level-container\");\n    const levelCircle = document.createElement(\"div\");\n    levelCircle.classList.add(\"level-circle\");\n    levelCircle.textContent = `Level ${level}`;\n    levelContainer.appendChild(levelCircle);\n    cardContainer.appendChild(levelContainer);\n\n    const seeAllRanksButton = document.createElement(\"button\");\n    seeAllRanksButton.textContent = \"See all ranks\";\n    seeAllRanksButton.addEventListener(\"click\", () => showAllRanks(level));\n    cardContainer.appendChild(seeAllRanksButton);\n\n    app.append(cardContainer);\n}\n\n// Function to show all ranks functionality\nfunction showAllRanks(level: number) {\n    const overlay = document.createElement(\"div\");\n    overlay.classList.add(\"overlay\");\n\n    const popup = document.createElement(\"div\");\n    popup.classList.add(\"popup-card\");\n\n    const title = document.createElement(\"h3\");\n    title.textContent = \"All Ranks\";\n    popup.appendChild(title);\n\n    const timeline = document.createElement(\"div\");\n    timeline.classList.add(\"timeline\");\n\n    ranks.forEach((rank, index) => {\n        const timelineStep = document.createElement(\"div\");\n        timelineStep.classList.add(\"timeline-step\");\n\n        const [rankInfo, err] = getRankInfo(level);\n        if (err) {\n            console.error(err);\n            return\n        }\n\n        let tit = rankInfo.currentRank.title\n\n        if (rank.title === tit) {\n            timelineStep.classList.add(\"current\");\n        }\n\n        const stepContent = document.createElement(\"div\");\n        stepContent.classList.add(\"timeline-content\");\n        if (rank.minLevel == 60) {\n            stepContent.textContent = `${rank.title} (Level ${rank.minLevel})`;\n        } else {\n            stepContent.textContent = `${rank.title} (Level ${rank.minLevel}-${rank.maxLevel})`;\n        }\n\n        timelineStep.appendChild(stepContent);\n        timeline.appendChild(timelineStep);\n\n        if (index < ranks.length - 1) {\n            const line = document.createElement(\"div\");\n            line.classList.add(\"timeline-line\");\n            timeline.appendChild(line);\n        }\n    });\n\n    popup.appendChild(timeline);\n\n    const closeButton = document.createElement(\"button\");\n    closeButton.textContent = \"Close\";\n    closeButton.addEventListener(\"click\", () => {\n        overlay.remove();\n    });\n    popup.appendChild(closeButton);\n\n    overlay.appendChild(popup);\n    document.body.appendChild(overlay);\n}\n"]}