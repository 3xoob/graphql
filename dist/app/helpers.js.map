{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/app/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { IUserSkill, IAuditStatus } from \"../types\";\n// Helper function to format the data size\nexport function formatSize(sizeInBytes: number): string {\n    if (sizeInBytes >= 1e9) {\n        return `${(sizeInBytes / 1e9).toFixed(2)} GB`;\n    } else if (sizeInBytes >= 1e6) {\n        return `${(sizeInBytes / 1e6).toFixed(2)} MB`;\n    } else if (sizeInBytes >= 1e3) {\n        return `${(sizeInBytes / 1e3).toFixed(2)} KB`;\n    } else {\n        return `${sizeInBytes} B`;\n    }\n}\n\n// Helper function to create individual data elements\nexport function createDataElement(label: string, value: string): HTMLElement {\n    const dataContainer = document.createElement(\"span\");\n    const labelElement = document.createElement(\"span\");\n    labelElement.textContent = label;\n    const valueElement = document.createElement(\"span\");\n    valueElement.textContent = value;\n\n    dataContainer.appendChild(labelElement);\n    dataContainer.appendChild(valueElement);\n    return dataContainer;\n}\n\n// Helper function to create media buttons\nexport function createMediaLink(href: string, iconClass: string, backgroundColor: string): HTMLAnchorElement {\n    const link = document.createElement(\"a\");\n    link.href = href;\n    link.className = \"link\";\n    link.style.backgroundColor = backgroundColor;\n    link.target = \"_blank\";\n\n    const icon = document.createElement(\"i\");\n    icon.className = iconClass;\n\n    link.appendChild(icon);\n    return link;\n}\n\n// Helper function to create data elements\nexport function createDataElementHead(label: string, value: string): HTMLElement {\n    const dataContainer = document.createElement(\"div\");\n    dataContainer.classList.add(\"data\");\n    const title = document.createElement(\"h4\");\n    title.textContent = label;\n    const content = document.createElement(\"p\");\n    content.textContent = value;\n    dataContainer.appendChild(title);\n    dataContainer.appendChild(content);\n    return dataContainer;\n}\n\n// Helper function to format the date to 'YYYY-MM-DD'\nexport function formatDate(dateString: any): string | undefined {\n    if (!dateString) return \"N/A\";\n    const date = new Date(dateString);\n    return date.toISOString().split(\"T\")[0];\n}\n\n// Helper function process the data of user skills\nexport function processUserSkillsData(userSkill: IUserSkill): [number[], string[]] {\n    const amounts: number[] = [];\n    const types: string[] = [];\n\n    if (Array.isArray(userSkill)) {\n        userSkill.forEach((skill) => {\n            amounts.push(skill.amount);\n            types.push(skill.type.replace(\"skill_\", \"\"));\n        });\n    } else {\n        console.error(\"Invalid data: 'transaction' is undefined or not an array.\");\n    }\n\n    return [amounts, types];\n}\n\n// Helper function to get the last segment of the path\nexport function getAuditNameFromPath(path: string): string {\n    if (!path) {\n        return '';\n    }\n\n    const parts = path.split(\"/\");\n\n    return parts[parts.length - 1] || '';\n}\n\n// Helper function to everses the order of audits from earliest to oldest\nexport function reverseAudits(auditStatus: IAuditStatus): IAuditStatus {\n    const reversedValidAudits = [...auditStatus.validAudits.nodes].reverse();\n    \n    const reversedFailedAudits = [...auditStatus.failedAudits.nodes].reverse();\n\n    return {\n        ...auditStatus,\n        validAudits: {\n            ...auditStatus.validAudits,\n            nodes: reversedValidAudits\n        },\n        failedAudits: {\n            ...auditStatus.failedAudits,\n            nodes: reversedFailedAudits\n        }\n    };\n}\n\n"]}