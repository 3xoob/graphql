{"version":3,"file":"xpCard.js","sourceRoot":"","sources":["../../src/app/xpCard.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AAEvC,iCAAiC;AACjC,MAAM,CAAC,KAAK,UAAU,YAAY;IAC9B,MAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IAC/C,IAAI,CAAC,GAAG,EAAE,CAAC;QACP,OAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAC9C,OAAO;IACX,CAAC;IAED,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;IAE5C,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,GAAG,MAAM,cAAc,CAAC,UAAU,EAAE,CAAC;IAEpE,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;QAClB,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,OAAO;IACX,CAAC;IAED,MAAM,OAAO,GAAa,eAAe,CAAC;IAC1C,MAAM,QAAQ,GAAW,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;IAEtD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC7C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAEhC,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3C,KAAK,CAAC,WAAW,GAAG,SAAS,CAAC;IAC9B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAE1B,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACnD,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzC,cAAc,CAAC,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;IAClD,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IAEnC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACrD,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAE7C,IAAI,QAAQ,IAAI,GAAG,EAAE,CAAC;QAClB,gBAAgB,CAAC,WAAW,GAAG,kBAAkB,CAAC;IACtD,CAAC;SAAM,IAAI,QAAQ,IAAI,GAAG,EAAE,CAAC;QACzB,gBAAgB,CAAC,WAAW,GAAG,2BAA2B,CAAC;IAC/D,CAAC;SAAM,IAAI,QAAQ,IAAI,GAAG,EAAE,CAAC;QACzB,gBAAgB,CAAC,WAAW,GAAG,gCAAgC,CAAC;IACpE,CAAC;SAAM,CAAC;QACJ,gBAAgB,CAAC,WAAW,GAAG,yBAAyB,CAAC;IAC7D,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;IAErC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACvB,CAAC","sourcesContent":["import { ITotalXp } from \"../types\";\nimport { GraphQLService } from \"./dataFetching\";\nimport { formatSize } from \"./helpers\";\n\n// Function to render the XP card\nexport async function renderXPCard() {\n    const app = document.getElementById('TwoElem');\n    if (!app) {\n        console.error('Profile container not found!');\n        return;\n    }\n\n    const graphQLService = new GraphQLService();\n\n    const [totalXPResponse, Xerror] = await graphQLService.getTotalXP();\n\n    if (Xerror !== null) {\n        console.error(Xerror);\n        return;\n    }\n\n    const totalXP: ITotalXp = totalXPResponse;\n    const xpAmount: number = totalXP.aggregate.sum.amount;\n\n    const xpCard = document.createElement('div');\n    xpCard.classList.add('xp-card');\n\n    const title = document.createElement('h2');\n    title.textContent = 'User XP';\n    xpCard.appendChild(title);\n\n    const xpValueElement = document.createElement('p');\n    xpValueElement.classList.add('xp-value');\n    xpValueElement.textContent = formatSize(xpAmount);\n    xpCard.appendChild(xpValueElement);\n\n    const xpMessageElement = document.createElement('p');\n    xpMessageElement.classList.add('xp-message');\n\n    if (xpAmount >= 1e9) {\n        xpMessageElement.textContent = \"You're a master!\";\n    } else if (xpAmount >= 5e8) {\n        xpMessageElement.textContent = \"Almost there, keep going!\";\n    } else if (xpAmount >= 1e6) {\n        xpMessageElement.textContent = \"Great job, you're progressing!\";\n    } else {\n        xpMessageElement.textContent = \"Keep up the great work!\";\n    }\n\n    xpCard.appendChild(xpMessageElement);\n\n    app.append(xpCard);\n}\n"]}